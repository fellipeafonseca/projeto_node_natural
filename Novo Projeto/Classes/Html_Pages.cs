using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Novo_Projeto
{
    class Html_Pages
    {
        public string nomePagina;
        public string nome;
        public List<string> labels;
        public string connectionString;
        public string chaveTabela;
        public List<string> tiposCSchar;
        public string nomeTabela;


        public void Criar_Pagina(StreamWriter writer)
        {

            writer.WriteLine("<%@ Page Language = \"C#\" AutoEventWireup = \"true\" CodeFile = \"" + nomePagina + ".cs\" Inherits = \"" + nome + "\" %>");

            writer.WriteLine("<html>");
            writer.WriteLine("<head runat =\"server\">");

       
            writer.WriteLine("</head>");
            writer.WriteLine("<body>");
            int count = 1;

            writer.WriteLine("<form id = \"form1\" runat = \"server\">");

            writer.WriteLine("<p>");
        //    writer.WriteLine("&nbsp;");
            writer.WriteLine("<h2>Cadastro</h2>");
            //   writer.WriteLine("&nbsp");
            writer.WriteLine("</p>");

            writer.WriteLine("<table style=\"width: 100 %; \">");

                for (int i = 0; i < labels.Count; i++)
                {

                
                //   writer.WriteLine("<p>");

                writer.WriteLine("<tr>");
                writer.WriteLine("<td>");

                writer.WriteLine("<labels>" + labels[i] + "</labels>");
                writer.WriteLine("</td>");

               
               

                writer.WriteLine("<td>");

                //if (tiposCSchar[i].Equals("Date") || tiposCSchar[i].Equals("date"))
                //{
                //    writer.WriteLine("<asp:TextBox ID = \"txt_" + labels[i].ToString() + "\" TextMode = \"Date\" runat = \"server\" ></asp:TextBox>");

                //}
               
                    if (tiposCSchar[i].Equals("int") || tiposCSchar[i].Equals("Int"))
                    {
                        writer.WriteLine("<asp:TextBox ID = \"txt_" + labels[i].ToString() + "\" TextMode = \"Number\" runat = \"server\" ></asp:TextBox>");
                    }
                    else
                    {
                        writer.WriteLine("<asp:TextBox ID = \"txt_" + labels[i].ToString() + "\" runat = \"server\" ></asp:TextBox>");
                    }
                
                    writer.WriteLine("</td>");
                writer.WriteLine("</tr>");

                count++;
            }
            writer.WriteLine("</table>");

            writer.WriteLine("<asp:Button ID = \"btn_Salvar\" runat = \"server\" Text = \"Salvar\" OnClick = \"btn_Salvar_Click\"/>");


            //gridCView
            writer.WriteLine("&nbsp;");
            writer.WriteLine("<h2>Listagem</h2>");
            writer.WriteLine("<asp:GridView ID = \"GridView1\" runat = \"server\" AutoGenerateColumns = \"false\" AutoGenerateDeleteButton = \"true\" AutoGenerateEditButton = \"true\" DataKeyNames = \"" + chaveTabela + "\" DataSourceID = \"SqlDataSource1\" EnableModelValidation = \"true\">");
            writer.WriteLine("<Columns >");
           // writer.WriteLine("<asp:BoundField DataField = \"" + chaveTabela + "\" HeaderText = \"" + chaveTabela + "\" InsertVisible = \"false\" ReadOnly = \"true\" SortExpression = \""+chaveTabela+"\"/>");

        
                for (int i = 0; i < labels.Count; i++)
                {

                if (labels[i].Equals(chaveTabela))
                {
                    writer.WriteLine("<asp:BoundField DataField = \"" + labels[i] + "\" HeaderText = \"" + labels[i] + "\" SortExpression = \"" + labels[i] + "\" ReadOnly=\"true\" />");
                }
                else
                {
                    writer.WriteLine("<asp:BoundField DataField = \"" + labels[i] + "\" HeaderText = \"" + labels[i] + "\" SortExpression = \"" + labels[i] + "\" />");
                }


            }


            writer.WriteLine("</Columns >");
            writer.WriteLine("</asp:GridView>");

            string comando_update = string.Empty;



                for (int i = 1; i < labels.Count; i++)
                {

                if (!labels[i].Equals(chaveTabela))
                {
                    comando_update += " [" + labels[i] + "] =@" + labels[i] + ",";
                }
            }

            comando_update = comando_update.Remove(comando_update.Length - 1, 1);

            comando_update += " where [" + chaveTabela + "] =@" + chaveTabela;
            writer.WriteLine("<asp:SqlDataSource ID = \"SqlDataSource1\" runat = \"server\" ConnectionString = \"" + connectionString + "\" SelectCommand = \"SELECT * FROM [" + nomeTabela + "]\" UpdateCommand = \"UPDATE [" + nomeTabela + "] Set " + comando_update + "\" DeleteCommand = \"DELETE from [" + nomeTabela + "] where [" + chaveTabela + "]=@" + chaveTabela + "\" ></asp:SqlDataSource >");

            writer.WriteLine("</form>");
            writer.WriteLine("</body>");
            writer.WriteLine("</html>");


        }


        public void Criar_Aspx_Cs(string nomeClasse, StreamWriter writer)
        {

            writer.WriteLine("using System;");
            writer.WriteLine("using System.Collections.Generic;");
            writer.WriteLine("using System.Linq;");
            writer.WriteLine("using System.Web;");
            writer.WriteLine("using System.Web.UI;");
            writer.WriteLine("using System.Web.UI.WebControls;");
            writer.WriteLine("using System.Data;");
            writer.WriteLine("using System.Data.SqlClient;");


            writer.WriteLine("");

            writer.WriteLine("public partial class " + nomeClasse + " : System.Web.UI.Page {");
            writer.WriteLine("SqlConnection con = new SqlConnection(@\"" + connectionString + "\");");
            writer.WriteLine("protected void Page_Load(object sender, EventArgs e)");
            writer.WriteLine("{");
            writer.WriteLine("}");


            writer.WriteLine("");
            writer.WriteLine("public void btn_Salvar_Click(object sender, EventArgs e) {");
            writer.WriteLine("con.Open();");
            writer.WriteLine("SqlCommand cmd = con.CreateCommand();");
            writer.WriteLine("cmd.CommandType = CommandType.Text;");

            string aux = string.Empty;

            for (int i = 0; i < labels.Count; i++)
            {
               
                if (labels.Count() - 1 == i)
                {
                    if (tiposCSchar[i].ToString().Equals("int"))
                    {

                        aux += "+ Convert.ToInt32(txt_" + labels[i] + ".Text)+ \"\"";
                    }

                    else
                    {
                        aux += "+\"'\" + txt_" + labels[i] + ".Text+ \"'\"";
                    }
                }
                else
                {
                    if (tiposCSchar[i].ToString().Equals("int"))
                    {

                        aux += "+ Convert.ToInt32(txt_" + labels[i] + ".Text)+ \",\"";
                    }
                    else
                    {
                        aux += "+\"'\" + txt_" + labels[i] + ".Text+ \"',\"";

                    }
                }
        }


            string insert = "insert into " + nomeTabela + " values (\"" + aux +"+\")\"";

            writer.WriteLine("cmd.CommandText = \""+insert+";");
            writer.WriteLine("cmd.ExecuteNonQuery();");
            writer.WriteLine("con.Close();");
            writer.WriteLine("Response.Redirect(\""+nomePagina+".aspx\");");
            writer.WriteLine("}");
            writer.WriteLine("}");


        }


    } 
}
